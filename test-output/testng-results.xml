<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="54366" started-at="2020-11-07T10:59:52 IST" finished-at="2020-11-07T11:00:46 IST">
    <groups>
    </groups>
    <test name="MyPageTest" duration-ms="54366" started-at="2020-11-07T10:59:52 IST" finished-at="2020-11-07T11:00:46 IST">
      <class name="LinkedInTestPages.MyPageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeSuite" is-config="true" duration-ms="144" started-at="2020-11-07T10:59:52 IST" finished-at="2020-11-07T10:59:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-11-07T10:59:52 IST" finished-at="2020-11-07T10:59:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeClass" is-config="true" duration-ms="1388" started-at="2020-11-07T10:59:52 IST" finished-at="2020-11-07T10:59:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-11-07T10:59:53 IST" finished-at="2020-11-07T10:59:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="googleHomePageTest()[pri:1, instance:LinkedInTestPages.MyPageTest@1f57539]" name="googleHomePageTest" duration-ms="551" started-at="2020-11-07T10:59:53 IST" finished-at="2020-11-07T10:59:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- googleHomePageTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-11-07T10:59:54 IST" finished-at="2020-11-07T10:59:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-11-07T10:59:54 IST" finished-at="2020-11-07T10:59:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="linkedInSignPageTest()[pri:2, instance:LinkedInTestPages.MyPageTest@1f57539]" name="linkedInSignPageTest" duration-ms="12043" started-at="2020-11-07T10:59:54 IST" finished-at="2020-11-07T11:00:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedInSignPageTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterMethod" is-config="true" duration-ms="2" started-at="2020-11-07T11:00:06 IST" finished-at="2020-11-07T11:00:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-11-07T11:00:06 IST" finished-at="2020-11-07T11:00:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="userHomePageTest()[pri:3, instance:LinkedInTestPages.MyPageTest@1f57539]" name="userHomePageTest" duration-ms="9044" started-at="2020-11-07T11:00:06 IST" finished-at="2020-11-07T11:00:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userHomePageTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterMethod" is-config="true" duration-ms="8" started-at="2020-11-07T11:00:15 IST" finished-at="2020-11-07T11:00:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-11-07T11:00:15 IST" finished-at="2020-11-07T11:00:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="userHomePageDown()[pri:4, instance:LinkedInTestPages.MyPageTest@1f57539]" name="userHomePageDown" duration-ms="20979" started-at="2020-11-07T11:00:15 IST" finished-at="2020-11-07T11:00:36 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Intesnsionally I faail this test case  did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Intesnsionally I faail this test case  did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at LinkedInTestPages.MyPageTest.userHomePageDown(MyPageTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userHomePageDown -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterMethod" is-config="true" duration-ms="4" started-at="2020-11-07T11:00:38 IST" finished-at="2020-11-07T11:00:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-11-07T11:00:38 IST" finished-at="2020-11-07T11:00:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="userLinkedInDetailsTest()[pri:5, instance:LinkedInTestPages.MyPageTest@1f57539]" name="userLinkedInDetailsTest" duration-ms="1867" started-at="2020-11-07T11:00:38 IST" finished-at="2020-11-07T11:00:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[I deliberately failed the test Case  did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: I deliberately failed the test Case  did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at LinkedInTestPages.MyPageTest.userLinkedInDetailsTest(MyPageTest.java:104)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLinkedInDetailsTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-11-07T11:00:41 IST" finished-at="2020-11-07T11:00:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterClass" is-config="true" duration-ms="5111" started-at="2020-11-07T11:00:41 IST" finished-at="2020-11-07T11:00:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-11-07T11:00:46 IST" finished-at="2020-11-07T11:00:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:LinkedInTestPages.MyPageTest@1f57539]" name="afterSuite" is-config="true" duration-ms="437" started-at="2020-11-07T11:00:46 IST" finished-at="2020-11-07T11:00:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- LinkedInTestPages.MyPageTest -->
    </test> <!-- MyPageTest -->
  </suite> <!-- Suite -->
</testng-results>
